(add alter table) - (drop alter table) - (alter table - modify) (alter table - change)
Ejercicios :
------------
Trabaje con la tabla "peliculas" de un video club.

1- Elimine la tabla, si existe.

2- Cree la tabla con la siguiente estructura:
 create table peliculas(
  codigo int unsigned auto_increment,
  nombre varchar(30) not null,
  actor varchar(20),d
  primary key(codigo)
 );

3- Ingrese algunos registros.

4- Agregue un campo para almacenar la duración de la película, de tipo tinyint unsigned:
  alter table peliculas
   add duracion tinyint unsigned;

5- Visualice la estructura de la tabla con "describe".

6- Agregue el campo "director" para almacenar el nombre del director, de tipo varchar(20):
 alter table peliculas
  add director varchar(20);

7- Visualice la estructura de la tabla con su nuevo campo:
 describe peliculas;

8- Intente agregar un campo existente. Aparece un mensaje de error:
 alter table peliculas
  add actor varchar(20);




Ejercicio 2 :
------------
Trabajamos con nuestra tabla "usuarios" que almacena los nombres de los usuarios y sus claves.

1- Elimine la tabla si existe.

2- Cree la tabla:
 create table usuarios (
  nombre varchar(30),
  clave varchar(10)
 );

3- Elimine el campo "clave":
 alter table usuarios
  drop clave;

4- Visualice la estructura de la tabla:
 describe usuarios;

5- Intente eliminar el único campo de la tabla:
 alter table usuarios
  drop nombre;
Aparece un mensaje de error y la sentencia no se ejecuta, esto es porque no se puede dejar una 
tabla vacía de campos.



Ejercicio 3 : 
------------
Trabaje con la tabla "peliculas" de un video club.

1- Elimine la tabla, si existe.

2- Cree la tabla con la siguiente estructura:
 create table peliculas(
  codigo int unsigned,
  nombre varchar(20) not null,
  actor varchar(20),
  director varchar(25),
  duracion tinyint
 );

3- Modifique el campo "duracion" por tinyint unsigned.
 alter table peliculas
  modify duracion tinyint unsigned;

4- Modifique el campo "nombre" para poder almacenar una longitud de 40 caracteres y que no permita 
valores nulos:
 alter table peliculas
  modify nombre varchar(40) not null;

5- Modifique el campo "actor" para que no permita valores nulos:
 alter table peliculas
  modify actor varchar(20) not null;

6- Intente definir "auto_increment" el campo "codigo" (mensaje de error):
 alter table peliculas
  modify codigo int unsigned auto_increment;





Ejercicio 4 : 
-------------
Un comercio que vende por mayor artículos de librería y papelería tiene una tabla 
llamada "articulos".

1- Elimine la tabla, si existe.

2- Cree la tabla con la siguiente estructura:
 create table articulos(
  codigo int unsigned auto_increment,
  nombre varchar(20) not null,
  descripcion varchar(30),
  precio decimal(4,2) unsigned,
  primary key(codigo)
 );

3- Ingrese los siguientes registros:
 insert into articulos (nombre,descripcion,precio)
  values('escuadra','plastico 20 cm.',3.50);
 insert into articulos (nombre,descripcion,precio)
  values('lápices colores','Faber x12',4.50);
 insert into articulos (nombre,descripcion,precio)
  values('lápices colores','Faber x24',7.50);
 insert into articulos (nombre,descripcion,precio)
  values('regla','30 cm.',2.50);
 insert into articulos (nombre,descripcion,precio)
  values('fibras','Faber x12',10.30);
 insert into articulos (nombre,descripcion,precio)
  values('fibras','Faber x6',5.10);

4- El comercio, que hasta ahora ha vendido sus artículos por mayor comenzará la venta por menor. 
Necesita alterar la tabla modificando el nombre del campo "precio" por "preciopormayor" además 
desea redefinirlo como no nulo:
 alter table articulos
  change precio preciopormayor decimal(4,2) unsigned not null;

5- También necesita alterar la tabla agregando un campo para almacenar el precio por menor para 
cada artículo. Agrege un campo llamado "preciopormenor" que no permita valores nulos:
 alter table articulos
  add preciopormenor decimal(4,2) unsigned not null;

6- Muestre todos los registros:
 select * from articulos;
Note que para el nuevo campo los valores se setearon en "null".

7- Actualice el campo "preciopormenor" de todos los registros, dándole el valor del campo "precio" 
incrementado en un 10%:
 update articulos set preciopormenor=precio+(precio*0.10);

8- Muestre todos los registros:
 select * from articulos;







 